# Steps for making a branch pipeline
# 1. Delete all caubeen and toque items
# 2. Delete all pickelhelm items, we don't patch for postgres
# 3. Delete all version and tarball items
# 4. Delete ship it. We tag the 'release' manually.
# 5. Switch cf-networking-dev and cf-networking-dev-ci to use the lts repo
# 6. Branch disaster-recovery-acceptance-tests into cf-container-networking
# 7. Pin resources:
  #  >  cf-networking-release-ci
  #  >  cf-networking-deployments
  #  >  cf-deployment-concourse-tasks
  #  >  cf-deployment
  #  >  silk-dev
  #  >  cf-networking-dev
  #  >  cf-acceptance-tests
# 8. Remove capi-ci-passed
# 9. Don't deploy with the following opsfiles
  #  >  custom-apps-domain.yml
  #  >  enable-iptables-logger.yml
  #  >  use-latest-capi.yml
  #  >  add-fake-istio-router-on-overlay.yml


groups:
- name: cf-networking
  jobs:
  - template-tests
  - mysql-tests
  - mysql-5.6-tests
  - postgres-tests
  - silk-postgres-tests
  - silk-mysql-tests
  - silk-mysql-5.6-tests
  - silk-template-tests
  - unit-and-integration-tests
  - upgrade-go1.x-in-networking-release
  - upgrade-go1.x-in-silk-release
  - pickelhelm-deploy
  - pickelhelm-test
  - mitre-deploy
  - mitre-test
  - mitre-perf-tests
  - mitre-cats
  - mitre-sli-map-route
  - mitre-sli-resolve-route
  - check-empty-networking-opsfile
  - ship-what
  - bump-minor-version
  - ship-cf-networking-and-silk
  - merge-master
  - silk-merge-master
  - toque-deploy
  - toque-push
  - toque-test
  - caubeen-deploy-pinned
  - caubeen-upgrade-test
  - caubeen-drats
  - delete-caubeen-deployment
- name: pickelhelm
  jobs:
  - pickelhelm-bbl-up
  - pickelhelm-bbl-destroy
  - pickelhelm-deploy
  - pickelhelm-test
  - pickelhelm-deploy-firehose-nozzle
  - delete-pickelhelm-deployment
- name: mitre
  jobs:
  - mitre-bbl-up
  - mitre-bbl-destroy
  - mitre-deploy
  - mitre-test
  - mitre-perf-tests
  - mitre-cats
  - mitre-deploy-firehose-nozzle
  - mitre-sli-map-route
  - mitre-sli-resolve-route
  - delete-deployment-mitre-cf
- name: toque
  jobs:
  - toque-bbl-up
  - toque-bbl-destroy
  - toque-deploy
  - toque-push
  - toque-test
  - toque-deploy-firehose-nozzle
  - delete-toque-deployment
- name: caubeen
  jobs:
  - caubeen-bbl-up
  - caubeen-deploy-pinned
  - caubeen-upgrade-test
  - caubeen-drats
  - caubeen-cleanup
  - caubeen-bbl-destroy
  - delete-caubeen-deployment
- name: bbl
  jobs:
  - pickelhelm-bbl-up
  - mitre-bbl-up
  - toque-bbl-up
  - pickelhelm-bbl-destroy
  - mitre-bbl-destroy
  - toque-bbl-destroy
  - caubeen-bbl-up
- name: cleanup
  jobs:
  - delete-deployment-mitre-cf
  - delete-pickelhelm-deployment
  - delete-toque-deployment
  - delete-caubeen-deployment
- name: version
  jobs:
  - major-bump
  - minor-bump
  - patch-bump

resources:
  ###### Control plane
  - name: cf-networking-release-ci
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-networking-release
      branch: develop
      paths:
        - ci
  - name: cf-networking-deployments
    type: git
    source:
      uri: "git@github.com:cloudfoundry/cf-networking-deployments.git"
      branch: master
      private_key: ((cf-networking-deployments-push-key.private_key))
  - name: cf-deployment-concourse-tasks
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
      branch: master
      tag_filter: "v*"
  - name: cf-deployment
    type: git
    source:
      branch: release-candidate
      uri: https://github.com/cloudfoundry/cf-deployment.git
  - name: cf-deployment-pinned
    type: git
    source:
      branch: master
      uri: https://github.com/cloudfoundry/cf-deployment.git
      tag_filter: "v7.1.0"
  - name: cf-networking-2.16.0
    type: git
    source:
      branch: master
      uri: https://github.com/cloudfoundry/cf-networking-release.git
      tag_filter: "2.16.0"
  - name: silk-2.16.0
    type: git
    source:
      branch: master
      uri: https://github.com/cloudfoundry/silk-release.git
      tag_filter: "2.16.0"
  - name: disaster-recovery-acceptance-tests
    type: git
    source:
      branch: master
      uri: https://github.com/cloudfoundry-incubator/disaster-recovery-acceptance-tests
  ###### bosh.io releases
  - name: datadog-firehose-nozzle-release
    type: bosh-io-release
    source:
      repository: DataDog/datadog-firehose-nozzle-release
  ###### BOSH release repos
  - name: routing-ci
    type: git
    source:
      branch: master
      uri: https://github.com/cloudfoundry/routing-ci.git
  - name: golang-release-latest
    type: git
    source:
      branch: master
      tag_filter: v*
      uri: https://github.com/bosh-packages/golang-release.git
  - name: capi-ci-passed
    type: git
    source:
      uri: https://github.com/cloudfoundry/capi-release.git
      branch: ci-passed
  - name: silk-dev-full
    type: git
    source:
      uri: git@github.com:cloudfoundry/silk-release.git
      branch: develop
      private_key: ((silk-release-deploy-key.private_key))
  - name: silk-dev
    type: git
    source:
      uri: git@github.com:cloudfoundry/silk-release.git
      branch: develop
      ignore_paths:
        - docs
      private_key: ((silk-release-deploy-key.private_key))
  - name: silk-master
    type: git
    source:
      uri: git@github.com:cloudfoundry/silk-release.git
      branch: master
      private_key: ((silk-release-deploy-key.private_key))
  - name: cf-networking-dev-full
    type: git
    source:
      uri: git@github.com:cloudfoundry/cf-networking-release.git
      branch: develop
      private_key: ((cf-networking-deploy-key.private_key))
  - name: cf-networking-dev
    type: git
    source:
      uri: git@github.com:cloudfoundry/cf-networking-release.git
      branch: develop
      ignore_paths:
        - docs
        - ci
      private_key: ((cf-networking-deploy-key.private_key))
  - name: cf-networking-master
    type: git
    source:
      uri: git@github.com:cloudfoundry/cf-networking-release.git
      branch: master
      private_key: ((cf-networking-deploy-key.private_key))
  - name: cf-networking-release-candidate
    type: git
    source:
      uri: git@github.com:cloudfoundry/cf-networking-release.git
      branch: release-candidate
      private_key: ((cf-networking-deploy-key.private_key))
  - name: silk-release-candidate
    type: git
    source:
      uri: git@github.com:cloudfoundry/silk-release.git
      branch: release-candidate
      private_key: ((silk-release-deploy-key.private_key))
  - name: bbr-binary-release
    type: github-release
    source:
      owner: cloudfoundry-incubator
      repository: bosh-backup-and-restore
      private_key: ((container-networking-bot-key.private_key)) # using a private key to get around rate limiting
  - name: istio-release
    type: git
    source:
      branch: master
      uri: https://github.com/cloudfoundry/istio-release
  - name: bosh-bootloader
    type: git
    source:
      branch: master
      uri: https://github.com/cloudfoundry/bosh-bootloader.git
  ####### Stats
  - name: toque-stats
    type: git
    source:
      uri: "git@github.com:cf-container-networking/toque-stats.git"
      branch: master
      private_key: ((container-networking-bot-key.private_key))
  ####### Timers
  - name: trigger-upgrade-deploy
    type: time
    source:
      location: America/Los_Angeles
      start: 4:00 AM
      stop: 4:15 AM
      days: [ Monday, Tuesday, Wednesday, Thursday, Friday ]
  - name: trigger-caubeen-delete
    type: time
    source:
      location: America/Los_Angeles
      start: 8:00 PM
      stop: 8:15 PM
      days: [ Monday, Tuesday, Wednesday, Thursday, Friday ]
  - name: trigger-caubeen-cleanup
    type: time
    source:
      location: America/Los_Angeles
      start: 2:00 PM
      stop: 2:15 PM
      days: [ Saturday ]
  - name: every-monday-morning
    type: time
    source:
      start: 8:00 AM
      stop: 9:00 AM
      location: America/Los_Angeles
      days: [Monday]
  - name: every-half-hour
    type: time
    source:
      interval: 30m
  - name: every-two-minutes
    type: time
    source:
      interval: 2m
  ####### Tests
  - name: cf-acceptance-tests
    type: git
    source:
      branch: release-candidate
      uri: git://github.com/cloudfoundry/cf-acceptance-tests.git
  - name: toque-scaling-test-params
    type: git
    source:
      uri: https://github.com/cf-container-networking/toque-scaling
      paths: [ test-params ]
  #######  Release management
  - name: version
    type: semver
    source:
      bucket: ((cf-networking-s3-bucket))
      region_name: us-west-2
      initial_version: 0.2.0-rc.1
      key: releases/current-version
      access_key_id: ((aws-access-key-id))
      secret_access_key: ((aws-secret-access-key))
  - name: cf-networking-tarball
    type: s3
    source:
      bucket: ((cf-networking-candidate-s3-bucket))
      region_name: us-west-2
      regexp: releases/cf-networking-(.*).tgz
      access_key_id: ((aws-access-key-id))
      secret_access_key: ((aws-secret-access-key))
  - name: silk-tarball
    type: s3
    source:
      bucket: ((silk-candidate-s3-bucket))
      region_name: us-west-2
      regexp: releases/silk-(.*).tgz
      access_key_id: ((aws-access-key-id))
      secret_access_key: ((aws-secret-access-key))
  # Github release
  - name: cf-networking-github-release
    type: github-release
    source:
      user: cloudfoundry
      repository: cf-networking-release
      access_token: ((github-access-token))
      drafts: true
  - name: silk-github-release
    type: github-release
    source:
      user: cloudfoundry
      repository: silk-release
      access_token: ((github-access-token))
      drafts: true

jobs:
  - name: postgres-tests
    plan:
    - aggregate:
      - get: cf-networking-dev
        trigger: true
      - get: cf-networking-release-ci
        params:
          submodules: none
    - task: unit-and-integration-tests
      file: cf-networking-release-ci/ci/tasks/postgres-tests.yml
      privileged: true
      input_mapping:
        cf-networking-release: cf-networking-dev

  - name: template-tests
    plan:
    - aggregate:
      - get: cf-networking-dev
        trigger: true
      - get: cf-networking-release-ci
        params:
          submodules: none
    - task: template-tests
      file: cf-networking-release-ci/ci/tasks/template-tests.yml
      input_mapping:
        cf-networking-release: cf-networking-dev

  - name: mysql-tests
    serial: true
    plan:
    - aggregate:
      - get: cf-networking-dev
        trigger: true
      - get: cf-networking-release-ci
        params:
          submodules: none
    - task: unit-and-integration-tests
      file: cf-networking-release-ci/ci/tasks/mysql-tests.yml
      privileged: true
      input_mapping:
        cf-networking-release: cf-networking-dev

  - name: mysql-5.6-tests
    serial: true
    plan:
    - aggregate:
      - get: cf-networking-dev
        trigger: true
      - get: cf-networking-release-ci
        params:
          submodules: none
    - task: unit-and-integration-tests
      file: cf-networking-release-ci/ci/tasks/mysql-5.6-tests.yml
      privileged: true
      input_mapping:
        cf-networking-release: cf-networking-dev

  - name: silk-postgres-tests
    plan:
    - aggregate:
      - get: silk-dev
        trigger: true
    - task: test-postgres
      file: silk-dev/ci/test-postgres.yml
      privileged: true
      input_mapping:
        silk: silk-dev

  - name: silk-mysql-tests
    plan:
    - aggregate:
      - get: silk-dev
        trigger: true
    - task: test-mysql
      file: silk-dev/ci/test-mysql.yml
      privileged: true
      input_mapping:
        silk: silk-dev

  - name: silk-mysql-5.6-tests
    plan:
    - aggregate:
      - get: silk-dev
        trigger: true
    - task: test-mysql-5.6
      file: silk-dev/ci/test-mysql-5.6.yml
      privileged: true
      input_mapping:
        silk: silk-dev

  - name: silk-template-tests
    plan:
    - aggregate:
      - get: silk-dev
        trigger: true
      - get: cf-networking-release-ci
        params:
          submodules: none
    - task: template-tests
      file: cf-networking-release-ci/ci/tasks/silk-template-tests.yml
      input_mapping:
        silk-release: silk-dev

  - name: unit-and-integration-tests
    plan:
    - get: cf-networking-dev
      passed: [postgres-tests, mysql-tests, mysql-5.6-tests, template-tests]
      trigger: true
    - get: silk-dev
      passed: [silk-postgres-tests, silk-mysql-tests, silk-mysql-5.6-tests, silk-template-tests]
      trigger: true

  - name: upgrade-go1.x-in-networking-release
    plan:
    - aggregate:
      - get: cf-networking-dev-full
      - get: golang-release-latest
        trigger: true
      - get: routing-ci
    - task: upgrade-go1.x-in-networking-release
      file: routing-ci/upgrade-package-in-release/task.yml
      params:
        PACKAGE: golang-1-linux
        AWS_SECRET_ACCESS_KEY: ((cf_networking_release_aws_blobstore_secret_access_key))
        AWS_ACCESS_KEY_ID: ((cf_networking_release_aws_blobstore_access_key_id))
        RELEASE: release
      input_mapping:
        release: cf-networking-dev-full
        package-release: golang-release-latest
    - task: save-golang-version-to-file
      file: routing-ci/save-golang-version-to-file/task.yml
      params:
        BRANCH: develop
      input_mapping:
        release: modified-release
    - put: cf-networking-dev-full
      params:
        repository: modified-release

  - name: upgrade-go1.x-in-silk-release
    plan:
    - aggregate:
      - get: silk-dev-full
      - get: golang-release-latest
        trigger: true
      - get: routing-ci
    - task: upgrade-go1.x-in-networking-release
      file: routing-ci/upgrade-package-in-release/task.yml
      params:
        PACKAGE: golang-1-linux
        AWS_SECRET_ACCESS_KEY: ((cf_networking_release_aws_blobstore_secret_access_key))
        AWS_ACCESS_KEY_ID: ((cf_networking_release_aws_blobstore_access_key_id))
        RELEASE: release
      input_mapping:
        release: silk-dev-full
        package-release: golang-release-latest
    - task: save-golang-version-to-file
      file: routing-ci/save-golang-version-to-file/task.yml
      params:
        BRANCH: develop
      input_mapping:
        release: modified-release
    - put: silk-dev-full
      params:
        repository: modified-release

  - name: pickelhelm-bbl-up
    serial_groups: [pickelhelm]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
        trigger: true
      - get: cf-networking-deployments
      - get: cf-networking-release-ci
      - get: bosh-bootloader
    - task: add-parent-dns
      file: cf-networking-release-ci/ci/tasks/add-parent-dns.yml
      params:
        ENVIRONMENT: pickelhelm
      input_mapping:
        bbl-state: cf-networking-deployments
    - task: bbl-up
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      params:
        BBL_GCP_SERVICE_ACCOUNT_KEY: environments/gcp/service-account.key.json
        BBL_GCP_REGION: us-east1
        BBL_STATE_DIR: environments/pickelhelm/
        BBL_IAAS: gcp
        BBL_LB_CERT: ((pickelhelm-lb-cert.certificate))
        BBL_LB_KEY: ((pickelhelm-lb-key.private_key))
        LB_DOMAIN: pickelhelm.c2c.cf-app.com
        BBL_ENV_NAME: pickelhelm
      input_mapping:
        bbl-state: updated-bbl-state
        bbl-config: updated-bbl-state
      ensure:
        put: cf-networking-deployments
        params:
          repository: updated-bbl-state
          rebase: true

  - name: pickelhelm-bbl-destroy
    serial_groups: [pickelhelm]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-deployments
    - task: bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      params:
        BBL_STATE_DIR: environments/pickelhelm/
      input_mapping:
        bbl-state: cf-networking-deployments
    - task: bbl-destroy
      file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
      params:
        BBL_STATE_DIR: environments/pickelhelm/
        BBL_GCP_SERVICE_ACCOUNT_KEY: environments/gcp/service-account.key.json
      input_mapping:
        bbl-state: cf-networking-deployments
      ensure:
        put: cf-networking-deployments
        params:
          repository: updated-bbl-state
          rebase: true

  - name: pickelhelm-deploy
    serial_groups: [pickelhelm]
    plan:
    - aggregate:
      - get: istio-release
      - get: capi-ci-passed
      - get: cf-networking-release-ci
        params:
          submodules: none
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-deployments
      - get: cf-deployment
        trigger: true
      - get: cf-networking-dev
        trigger: true
        passed: [unit-and-integration-tests]
      - get: silk-dev
        trigger: true
        passed: [unit-and-integration-tests]
    - task: collect-ops-files
      file: cf-networking-release-ci/ci/tasks/collect-ops-files.yml
      params:
        ENVIRONMENT_NAME: pickelhelm
      input_mapping:
        cf-networking-release: cf-networking-dev
        deployments-repo: cf-networking-deployments
        silk-release: silk-dev
    - aggregate:
      - task: upload-stemcell
        file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
        params:
          BBL_STATE_DIR: environments/pickelhelm/
        input_mapping:
          bbl-state: cf-networking-deployments
      - task: upload-local-capi-release
        file: cf-networking-release-ci/ci/tasks/upload-local-release.yml
        input_mapping:
          bbl-state: cf-networking-deployments
          local-release: capi-ci-passed
        params:
          BBL_STATE_DIR: environments/pickelhelm/
      - task: upload-local-networking-release
        file: cf-networking-release-ci/ci/tasks/upload-local-release.yml
        input_mapping:
          bbl-state: cf-networking-deployments
          local-release: cf-networking-dev
        params:
          BBL_STATE_DIR: environments/pickelhelm/
      - task: upload-local-silk-release
        file: cf-networking-release-ci/ci/tasks/upload-local-release.yml
        input_mapping:
          bbl-state: cf-networking-deployments
          local-release: silk-dev
        params:
          BBL_STATE_DIR: environments/pickelhelm/
      - task: upload-acceptance-test-release
        file: cf-networking-release-ci/ci/tasks/upload-acceptance-test-release.yml
        input_mapping:
          bbl-state: cf-networking-deployments
        params:
          BBL_STATE_DIR: environments/pickelhelm/
    - task: deploy-cf
      file: cf-deployment-concourse-tasks/bosh-deploy-with-created-release/task.yml
      params:
        BBL_STATE_DIR: environments/pickelhelm/
        SYSTEM_DOMAIN: pickelhelm.c2c.cf-app.com
        OPS_FILES: |
          datadog.yml
          scale-to-one-az.yml
          smaller-footprint.yml
          cf-networking.yml
          use-system-domain-as-metron-deployment-name.yml
          enable-routing-integrity.yml
          add-route-syncer.yml
          use-latest-silk.yml
          use-latest-capi.yml
          use-latest-cf-networking.yml
          enable-service-discovery.yml
          add-apps-internal-search-domain.yml
          add-acceptance-test-jobs.yml
          enable-experimental-dynamic-egress-policies.yml
          add-istio.yml
          enable-sidecar-proxying.yml
          disable-ingress-redirect-to-proxy.yml
          enable-iptables-logger.yml
          use-external-postgres-for-c2c.yml
          scale-to-2-diego-cells.yml
          lower-canary-watch-time.yml
      input_mapping:
        bbl-state: cf-networking-deployments
        release: istio-release # because the pre-package script is broken
        vars-files: cf-networking-deployments
        vars-store: cf-networking-deployments
    - task: bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      params:
        BBL_STATE_DIR: environments/pickelhelm/
      input_mapping:
        bbl-state: cf-networking-deployments

  - name: pickelhelm-deploy-firehose-nozzle
    serial_groups: [pickelhelm]
    plan:
    - aggregate:
      - get: every-monday-morning
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-release-ci
        params:
          submodules: none
      - get: cf-networking-deployments
        passed: [pickelhelm-deploy]
      - get: datadog-firehose-nozzle-release
    - task: upload-datadog-firehose-nozzle-release
      file: cf-networking-release-ci/ci/tasks/upload-release-tarball.yml
      input_mapping:
        deployments-repo: cf-networking-deployments
        tarballs: datadog-firehose-nozzle-release
      params:
        ENVIRONMENT_NAME: pickelhelm
    - task: deploy-datadog-firehose-nozzle
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      input_mapping:
        bbl-state: cf-networking-deployments
        cf-deployment: cf-networking-deployments
        ops-files: cf-networking-deployments
        vars-files: cf-networking-deployments
        vars-store: cf-networking-deployments
      params:
        BBL_STATE_DIR: environments/pickelhelm
        MANIFEST_FILE: firehose-nozzles.yml
        OPS_FILES: ""
        SYSTEM_DOMAIN: pickelhelm.c2c.cf-app.com


  - name: pickelhelm-test
    serial_groups: [pickelhelm]
    plan:
    - aggregate:
      - get: cf-networking-release-ci
        params:
          submodules: none
      - get: cf-networking-deployments
        passed: [pickelhelm-deploy]
      - get: cf-deployment
        passed: [pickelhelm-deploy]
        trigger: true
      - get: cf-networking-dev
        passed: [pickelhelm-deploy]
        trigger: true
      - get: silk-dev
        passed: [pickelhelm-deploy]
        trigger: true
    - task: get-credhub-vars
      file: cf-networking-release-ci/ci/tasks/get-credhub-vars.yml
      input_mapping:
        bbl-state: cf-networking-deployments
      params:
        BBL_STATE_DIR: environments/pickelhelm
        VARIABLES: |
          /bosh-pickelhelm/cf/cf_admin_password
          /bosh-pickelhelm/cf/uaa_admin_client_secret
    - task: acceptance-tests-sd
      file: cf-networking-release-ci/ci/tasks/test-acceptance-sd.yml
      input_mapping:
        cf-networking: cf-networking-dev
        test-config: cf-networking-deployments
        vars-store: cf-networking-deployments
      params:
        ENVIRONMENT_NAME: pickelhelm
    - task: acceptance-tests
      file: cf-networking-release-ci/ci/tasks/acceptance-tests.yml
      input_mapping:
        cf-networking: cf-networking-dev
        test-config: cf-networking-deployments
        vars-store: cf-networking-deployments
      params:
        ENVIRONMENT_NAME: pickelhelm

  - name: mitre-bbl-up
    serial_groups: [mitre-test-group, mitre-deploy-group]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
        trigger: true
      - get: cf-networking-deployments
      - get: cf-networking-release-ci
      - get: bosh-bootloader
    - task: add-parent-dns
      file: cf-networking-release-ci/ci/tasks/add-parent-dns.yml
      params:
        ENVIRONMENT: mitre
      input_mapping:
        bbl-state: cf-networking-deployments
    - task: bbl-up
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      params:
        BBL_GCP_SERVICE_ACCOUNT_KEY: environments/gcp/service-account.key.json
        BBL_GCP_REGION: us-east1
        BBL_STATE_DIR: environments/mitre/
        BBL_IAAS: gcp
        BBL_LB_CERT: ((mitre-lb-cert.certificate))
        BBL_LB_KEY: ((mitre-lb-key.private_key))
        LB_DOMAIN: mitre.c2c.cf-app.com
        BBL_ENV_NAME: mitre
      input_mapping:
        bbl-state: updated-bbl-state
        bbl-config: updated-bbl-state
      ensure:
        put: cf-networking-deployments
        params:
          repository: updated-bbl-state
          rebase: true

  - name: mitre-bbl-destroy
    serial_groups: [mitre-deploy-group]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-deployments
    - task: bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      params:
        BBL_STATE_DIR: environments/mitre/
      input_mapping:
        bbl-state: cf-networking-deployments
    - task: bbl-destroy
      file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
      params:
        BBL_STATE_DIR: environments/mitre/
        BBL_GCP_SERVICE_ACCOUNT_KEY: environments/gcp/service-account.key.json
      input_mapping:
        bbl-state: cf-networking-deployments
      ensure:
        put: cf-networking-deployments
        params:
          repository: updated-bbl-state
          rebase: true

  - name: mitre-deploy
    serial_groups: [mitre-deploy-group, version]
    plan:
    - aggregate:
      - get: istio-release
        passed: [pickelhelm-deploy]
      - get: capi-ci-passed
        passed: [pickelhelm-deploy]
      - get: cf-networking-release-ci
        params:
          submodules: none
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-deployments
      - get: cf-deployment
        passed: [pickelhelm-test]
        trigger: true
      - get: cf-networking-dev
        trigger: true
        passed: [pickelhelm-test]
      - get: silk-dev
        trigger: true
        passed: [pickelhelm-test]
      - get: version
        params:
          pre: rc
    - task: collect-ops-files
      file: cf-networking-release-ci/ci/tasks/collect-ops-files.yml
      params:
        ENVIRONMENT_NAME: mitre
      input_mapping:
        cf-networking-release: cf-networking-dev
        deployments-repo: cf-networking-deployments
        silk-release: silk-dev
    - aggregate:
      - task: upload-stemcell
        file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
        params:
          BBL_STATE_DIR: environments/mitre/
        input_mapping:
          bbl-state: cf-networking-deployments
      - task: upload-local-capi-release
        file: cf-networking-release-ci/ci/tasks/upload-local-release.yml
        input_mapping:
          bbl-state: cf-networking-deployments
          local-release: capi-ci-passed
        params:
          BBL_STATE_DIR: environments/mitre/
      - task: upload-cfnetworking-release
        file: cf-networking-release-ci/ci/tasks/upload-local-release.yml
        input_mapping:
          bbl-state: cf-networking-deployments
          local-release: cf-networking-dev
        params:
          BBL_STATE_DIR: environments/mitre/
      - task: upload-local-silk-release
        file: cf-networking-release-ci/ci/tasks/upload-local-release.yml
        input_mapping:
          bbl-state: cf-networking-deployments
          local-release: silk-dev
        params:
          BBL_STATE_DIR: environments/mitre/
      - task: upload-acceptance-test-release
        file: cf-networking-release-ci/ci/tasks/upload-acceptance-test-release.yml
        input_mapping:
          bbl-state: cf-networking-deployments
        params:
          ENVIRONMENT_NAME: mitre
          BBL_STATE_DIR: environments/mitre/
    - task: set-apps-domain
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: c2cnetworking/deploy-light
        inputs:
          - name: cf-networking-deployments
        run:
          path: bash
          args:
            - -exc
            - |
              pushd cf-networking-deployments/environments/mitre
                eval "$(bbl print-env)"
              popd
              credhub set -n "/bosh-mitre/cf/apps_domain" -t value -v "apps.mitre.c2c.cf-app.com"
    - task: deploy-cf
      file: cf-deployment-concourse-tasks/bosh-deploy-with-created-release/task.yml
      params:
        BBL_STATE_DIR: environments/mitre/
        SYSTEM_DOMAIN: mitre.c2c.cf-app.com
        OPS_FILES: |
          cf-networking-dev/ci/opsfiles/datadog.yml
          cf-deployment/operations/scale-to-one-az.yml
          cf-networking-deployments/smaller-footprint.yml
          cf-networking-release/ci/pipelines/cf-networking.yml
          cf-networking-release/manifest-generation/opsfiles/use-system-domain-as-metron-deployment-name.yml
          cf-networking-release/ci/opsfiles/custom-apps-domain.yml
          cf-deployment/operations/enable-routing-integrity.yml
          cf-deployment/operations/experimental/enable-iptables-logger.yml
          add-route-syncer.yml
          use-latest-silk.yml
          use-latest-capi.yml
          use-latest-cf-networking.yml
          enable-service-discovery.yml
          add-apps-internal-search-domain.yml
          add-acceptance-test-jobs.yml
          enable-backup-restore.yml
          enable-experimental-dynamic-egress-policies.yml
          add-istio.yml
          enable-sidecar-proxying.yml
          disable-ingress-redirect-to-proxy.yml
          add-smoke-test-user.yml
          change-vtep-port.yml
          enable-rate-limiting-for-udp.yml
          enable-space-developer-self-service.yml
          scale-ephemeral-disk.yml
          scale-instances-to-2.yml
          scale-persistent-disk.yml
          lower-canary-watch-time.yml
      input_mapping:
        bbl-state: cf-networking-deployments
        vars-store: cf-networking-deployments
        vars-files: cf-networking-deployments
        release: istio-release
    - task: create-release-tarball
      file: cf-networking-release-ci/ci/tasks/create-release-tarball.yml
      input_mapping:
        my-release: cf-networking-dev
      params:
        RELEASE_NAME: cf-networking
        VERSION_NAME: version
    - put: cf-networking-tarball
      params:
        file: tarballs/cf-networking-*.tgz
    - task: create-silk-release-tarball
      file: cf-networking-release-ci/ci/tasks/create-release-tarball.yml
      input_mapping:
        my-release: silk-dev
      params:
        RELEASE_NAME: silk
        VERSION_NAME: version
    - put: silk-tarball
      params:
        file: tarballs/silk-*.tgz
    - put: version
      params: {file: version/number}
    - task: bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      params:
        BBL_STATE_DIR: environments/mitre/
      input_mapping:
        bbl-state: cf-networking-deployments

  - name: mitre-test
    serial_groups: [mitre-test-group, mitre-deploy-group]
    plan:
    - aggregate:
      - get: cf-networking-deployments
      - get: cf-networking-dev
        passed: [mitre-deploy]
        trigger: true
      - get: cf-networking-tarball
        passed: [mitre-deploy]
        trigger: true
      - get: version
        passed: [mitre-deploy]
      - get: cf-networking-release-ci
        params:
          submodules: none
      - get: cf-deployment
        passed: [mitre-deploy]
        trigger: true
      - get: silk-dev
        passed: [mitre-deploy]
        trigger: true
      - get: silk-tarball
        passed: [mitre-deploy]
    - task: get-credhub-vars
      file: cf-networking-release-ci/ci/tasks/get-credhub-vars.yml
      input_mapping:
        bbl-state: cf-networking-deployments
      params:
        BBL_STATE_DIR: environments/mitre
        VARIABLES: |
          /bosh-mitre/cf/cf_admin_password
          /bosh-mitre/cf/uaa_admin_client_secret
          /bosh-mitre/cf/cf_networking_smoke_user_password
    - task: setup-smoke-config
      file: cf-networking-release-ci/ci/tasks/setup-smoke-config.yml
      params:
        ENVIRONMENT_NAME: mitre
    - task: smoke-tests-sd
      privileged: true
      file: cf-networking-release-ci/ci/tasks/smoke-tests-sd.yml
      input_mapping:
        test-config: cf-networking-deployments
        cf-networking: cf-networking-dev
      params:
        ENVIRONMENT_TAG: mitre.c2c.cf-app.com
        DATADOG_API_KEY: ((datadog_api_key))
    - task: smoke-tests
      file: cf-networking-release-ci/ci/tasks/smoke-tests.yml
      params:
        ENVIRONMENT_NAME: mitre
        ENVIRONMENT_TAG: mitre.c2c.cf-app.com
        DATADOG_API_KEY: ((datadog_api_key))
      input_mapping:
        test-config: cf-networking-deployments
        cf-networking: cf-networking-dev
    - task: acceptance-tests
      file: cf-networking-release-ci/ci/tasks/acceptance-tests.yml
      input_mapping:
        cf-networking: cf-networking-dev
        test-config: cf-networking-deployments
        vars-store: cf-networking-deployments
      params:
        ENVIRONMENT_NAME: mitre
    - task: acceptance-tests-sd
      privileged: true
      file: cf-networking-release-ci/ci/tasks/test-acceptance-sd.yml
      input_mapping:
        cf-networking: cf-networking-dev
        test-config: cf-networking-deployments
        vars-store: cf-networking-deployments
      params:
        ENVIRONMENT_NAME: mitre

  - name: mitre-deploy-firehose-nozzle
    serial_groups: [mitre-test-group, mitre-deploy-group]
    plan:
    - aggregate:
      - get: every-monday-morning
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-release-ci
        params:
          submodules: none
      - get: cf-networking-deployments
        passed: [mitre-deploy]
      - get: datadog-firehose-nozzle-release
    - task: upload-datadog-firehose-nozzle-release
      file: cf-networking-release-ci/ci/tasks/upload-release-tarball.yml
      input_mapping:
        deployments-repo: cf-networking-deployments
        tarballs: datadog-firehose-nozzle-release
      params:
        ENVIRONMENT_NAME: mitre
    - task: deploy-datadog-firehose-nozzle
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      input_mapping:
        cf-deployment: cf-networking-deployments
        bbl-state: cf-networking-deployments
        vars-files: cf-networking-deployments
        ops-files: cf-networking-deployments
      params:
        BBL_STATE_DIR: environments/mitre
        MANIFEST_FILE: firehose-nozzles.yml
        OPS_FILES: ""
        SYSTEM_DOMAIN: mitre.c2c.cf-app.com

  - name: mitre-perf-tests
    serial_groups: [mitre-test-group, mitre-deploy-group]
    plan:
    - aggregate:
      - get: cf-networking-deployments
      - get: cf-networking-dev
        passed: [mitre-deploy]
        trigger: true
      - get: cf-networking-tarball
        passed: [mitre-deploy]
        trigger: true
      - get: version
        passed: [mitre-deploy]
      - get: cf-networking-release-ci
        params:
          submodules: none
      - get: cf-deployment
        passed: [mitre-deploy]
        trigger: true
      - get: silk-dev
        passed: [mitre-deploy]
        trigger: true
      - get: silk-tarball
        passed: [mitre-deploy]
    - task: mitre-perf-tests
      privileged: true
      file: cf-networking-release-ci/ci/tasks/test-nats-performance.yml
      input_mapping:
        cf-networking: cf-networking-dev
        test-config: cf-networking-deployments
        deployments-repo: cf-networking-deployments
      params:
        ENVIRONMENT_NAME: mitre

  - name: mitre-cats
    serial_groups: [mitre-test-group, mitre-deploy-group]
    plan:
    - aggregate:
      - get: cf-networking-release-ci
        params:
          submodules: none
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
      - get: cf-networking-dev
        passed: [mitre-test, mitre-perf-tests]
        trigger: true
      - get: cf-deployment
        passed: [mitre-test, mitre-perf-tests]
        trigger: true
      - get: cf-networking-deployments
      - get: cf-networking-tarball
        trigger: true
        passed: [mitre-test, mitre-perf-tests]
      - get: silk-dev
        passed: [mitre-test, mitre-perf-tests]
        trigger: true
      - get: silk-tarball
        passed: [mitre-test, mitre-perf-tests]
      - get: version
        passed: [mitre-test, mitre-perf-tests]
    - task: get-credhub-vars
      file: cf-networking-release-ci/ci/tasks/get-credhub-vars.yml
      input_mapping:
        bbl-state: cf-networking-deployments
      params:
        BBL_STATE_DIR: environments/mitre
        VARIABLES: |
          /bosh-mitre/cf/cf_admin_password
    - task: copy-config
      file: cf-networking-release-ci/ci/tasks/copy-config.yml
      params:
        ENVIRONMENT: mitre
    - task: cats
      file: cf-deployment-concourse-tasks/run-cats/task.yml
      params:
        NODES: 8

  - name: mitre-sli-map-route
    serial: true
    build_logs_to_retain: 1000
    plan:
    - aggregate:
      - get: every-two-minutes
        trigger: true
      - get: cf-networking-release-ci
        params:
          submodules: none
      - get: cf-networking-deployments
    - task: get-credhub-vars
      file: cf-networking-release-ci/ci/tasks/get-credhub-vars.yml
      input_mapping:
        bbl-state: cf-networking-deployments
      params:
        BBL_STATE_DIR: environments/mitre
        VARIABLES: |
          /bosh-mitre/cf/cf_admin_password
    - task: sli-setup
      file: cf-networking-release-ci/ci/tasks/sli-setup.yml
      params:
        ENVIRONMENT_TAG: mitre.c2c.cf-app.com
        SLI_ORG: sli-map-route
        SLI_SPACE: sli-map-route
        SLI_APP_NAME: sli-map-route
    - task: sli-map-route
      file: cf-networking-release-ci/ci/tasks/sli-map-route.yml
      timeout: 5m
      params:
        ENVIRONMENT_TAG: mitre.c2c.cf-app.com
        DATADOG_API_KEY: ((datadog_api_key))
        SLI_ORG: sli-map-route
        SLI_SPACE: sli-map-route
        SLI_APP_NAME: sli-map-route

  - name: mitre-sli-resolve-route
    serial: true
    build_logs_to_retain: 1000
    plan:
    - aggregate:
      - get: every-two-minutes
        trigger: true
      - get: cf-networking-release-ci
        params:
          submodules: none
      - get: cf-networking-deployments
    - task: get-credhub-vars
      file: cf-networking-release-ci/ci/tasks/get-credhub-vars.yml
      input_mapping:
        bbl-state: cf-networking-deployments
      params:
        BBL_STATE_DIR: environments/mitre
        VARIABLES: |
          /bosh-mitre/cf/cf_admin_password
    - task: sli-setup
      file: cf-networking-release-ci/ci/tasks/sli-setup.yml
      params:
        ENVIRONMENT_TAG: mitre.c2c.cf-app.com
        SLI_ORG: sli-resolve-route
        SLI_SPACE: sli-resolve-route
        SLI_APP_NAME: sli-resolve-route
        MAP_INTERNAL_ROUTE: true
    - task: sli-resolve-route
      file: cf-networking-release-ci/ci/tasks/sli-resolve-route.yml
      timeout: 5m
      params:
        ENVIRONMENT_TAG: mitre.c2c.cf-app.com
        DATADOG_API_KEY: ((datadog_api_key))
        SLI_ORG: sli-resolve-route
        SLI_SPACE: sli-resolve-route
        SLI_APP_NAME: sli-resolve-route

  - name: toque-bbl-up
    serial_groups: [toque]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
        trigger: true
      - get: cf-networking-deployments
      - get: cf-networking-release-ci
      - get: bosh-bootloader
    - task: add-parent-dns
      file: cf-networking-release-ci/ci/tasks/add-parent-dns.yml
      params:
        ENVIRONMENT: toque
      input_mapping:
        bbl-state: cf-networking-deployments
    - task: bbl-up
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      params:
        BBL_GCP_SERVICE_ACCOUNT_KEY: environments/gcp/service-account.key.json
        BBL_GCP_REGION: us-east1
        BBL_STATE_DIR: environments/toque/
        BBL_IAAS: gcp
        BBL_LB_CERT: ((toque-lb-cert.certificate))
        BBL_LB_KEY: ((toque-lb-key.private_key))
        LB_DOMAIN: toque.c2c.cf-app.com
        BBL_ENV_NAME: toque
      input_mapping:
        bbl-state: updated-bbl-state
        bbl-config: updated-bbl-state
      ensure:
        put: cf-networking-deployments
        params:
          repository: updated-bbl-state
          rebase: true

  - name: toque-bbl-destroy
    serial_groups: [toque]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-deployments
    - task: bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      params:
        BBL_STATE_DIR: environments/toque/
      input_mapping:
        bbl-state: cf-networking-deployments
    - task: bbl-destroy
      file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
      params:
        BBL_STATE_DIR: environments/toque/
        BBL_GCP_SERVICE_ACCOUNT_KEY: environments/gcp/service-account.key.json
      input_mapping:
        bbl-state: cf-networking-deployments
      ensure:
        put: cf-networking-deployments
        params:
          repository: updated-bbl-state
          rebase: true

  - name: toque-deploy
    serial_groups: [toque]
    plan:
    - aggregate:
      - get: istio-release
      - get: capi-ci-passed
      - get: cf-deployment-concourse-tasks
      - get: cf-deployment
      - get: cf-networking-release-ci
        params:
          submodules: none
      - get: cf-networking-deployments
      - get: cf-networking-dev
        passed: [unit-and-integration-tests]
        trigger: true
      - get: silk-dev
        passed: [unit-and-integration-tests]
        trigger: true
      - get: datadog-firehose-nozzle-release
    - aggregate:
      - task: upload-stemcell
        file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
        input_mapping:
          bbl-state: cf-networking-deployments
          cf-deployment: cf-deployment
        params:
          BBL_STATE_DIR: environments/toque
      - task: upload-local-capi-release
        file: cf-networking-release-ci/ci/tasks/upload-local-release.yml
        input_mapping:
          bbl-state: cf-networking-deployments
          local-release: capi-ci-passed
        params:
          BBL_STATE_DIR: environments/toque/
      - task: upload-local-silk-release
        file: cf-networking-release-ci/ci/tasks/upload-local-release.yml
        input_mapping:
          bbl-state: cf-networking-deployments
          local-release: silk-dev
        params:
          BBL_STATE_DIR: environments/toque/
      - task: upload-local-networking-release
        file: cf-networking-release-ci/ci/tasks/upload-local-release.yml
        input_mapping:
          bbl-state: cf-networking-deployments
          local-release: cf-networking-dev
        params:
          BBL_STATE_DIR: environments/toque/
      - task: collect-ops-files
        file: cf-networking-release-ci/ci/tasks/collect-ops-files.yml
        params:
          ENVIRONMENT_NAME: toque
        input_mapping:
          deployments-repo: cf-networking-deployments
          cf-networking-release: cf-networking-dev
          silk-release: silk-dev
    - task: emit-datadog-deploy-start
      file: cf-networking-release-ci/ci/tasks/emit-datadog-event.yml
      params:
        TITLE: deploy_start
        TEXT: deploy_start
        PRIORITY: normal
        AWS_ENV: toque.c2c.cf-app.com
        DATADOG_API_KEY: ((datadog_api_key))
    - task: deploy-cf
      file: cf-deployment-concourse-tasks/bosh-deploy-with-created-release/task.yml
      params:
        BBL_STATE_DIR: environments/toque
        SYSTEM_DOMAIN: toque.c2c.cf-app.com
        OPS_FILES: |
          use-compiled-releases.yml
          datadog.yml
          scale-to-one-az.yml
          smaller-footprint.yml
          cf-networking.yml
          use-system-domain-as-metron-deployment-name.yml
          enable-routing-integrity.yml
          add-route-syncer.yml
          use-latest-silk.yml
          use-latest-capi.yml
          use-latest-cf-networking.yml
          enable-service-discovery.yml
          add-apps-internal-search-domain.yml
          enable-experimental-dynamic-egress-policies.yml
          add-istio.yml
          enable-sidecar-proxying.yml
          disable-ingress-redirect-to-proxy.yml
          enable-iptables-logger.yml
          change-nats-monitor-port.yml
          increase-diego-cell-mtu.yml
          scale-diego-cell-max-in-flight.yml
          scale-diego-cell-vm-size.yml
          scale-max-containers.yml
          scale-router-ephemeral-disk.yml
          scale-to-3-diego-cells.yml
          lower-canary-watch-time.yml
      input_mapping:
        bbl-state: cf-networking-deployments
        cf-deployment: cf-deployment
        release: istio-release
        vars-files: cf-networking-deployments
        vars-store: cf-networking-deployments
    - task: emit-datadog-deploy-end
      file: cf-networking-release-ci/ci/tasks/emit-datadog-event.yml
      params:
        TITLE: deploy_end
        TEXT: deploy_end
        PRIORITY: normal
        AWS_ENV: toque.c2c.cf-app.com
        DATADOG_API_KEY: ((datadog_api_key))
    - task: bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      params:
        BBL_STATE_DIR: environments/toque/
      input_mapping:
        bbl-state: cf-networking-deployments

  - name: toque-deploy-firehose-nozzle
    serial_groups: [toque]
    plan:
    - aggregate:
      - get: every-monday-morning
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-release-ci
        params:
          submodules: none
      - get: cf-networking-deployments
        passed: [toque-deploy]
      - get: datadog-firehose-nozzle-release
    - task: upload-datadog-firehose-nozzle-release
      file: cf-networking-release-ci/ci/tasks/upload-release-tarball.yml
      input_mapping:
        deployments-repo: cf-networking-deployments
        tarballs: datadog-firehose-nozzle-release
      params:
        ENVIRONMENT_NAME: toque
    - task: deploy-datadog-firehose-nozzle
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      input_mapping:
        cf-deployment: cf-networking-deployments
        vars-store: cf-networking-deployments
        bbl-state: cf-networking-deployments
        vars-files: cf-networking-deployments
        ops-files: cf-networking-deployments
      params:
        BBL_STATE_DIR: environments/toque
        MANIFEST_FILE: firehose-nozzles.yml
        OPS_FILES: ""
        SYSTEM_DOMAIN: toque.c2c.cf-app.com

  - name: toque-push
    serial_groups: [toque]
    plan:
    - aggregate:
      - get: cf-networking-release-ci
        params:
          submodules: none
      - get: cf-networking-deployments
        passed: [toque-deploy]
      - get: cf-networking-dev
        passed: [toque-deploy]
        trigger: true
      - get: toque-scaling-test-params
        trigger: true
    - task: get-credhub-vars
      file: cf-networking-release-ci/ci/tasks/get-credhub-vars.yml
      input_mapping:
        bbl-state: cf-networking-deployments
      params:
        BBL_STATE_DIR: environments/toque
        VARIABLES: |
          /bosh-toque/cf/cf_admin_password
    - task: set-scaling-test-params
      file: cf-networking-release-ci/ci/tasks/set-scaling-test-params.yml
      params:
        ENVIRONMENT_NAME: toque
      input_mapping:
        deployments-repo: cf-networking-deployments
        scaling-test-params: toque-scaling-test-params
    - task: push-apps
      file: cf-networking-release-ci/ci/tasks/push-apps.yml
      params:
        ENVIRONMENT_NAME: toque
      input_mapping:
        cf-networking: cf-networking-dev
        test-config: test-config

  - name: toque-test
    serial_groups: [toque]
    plan:
    - aggregate:
      - get: every-half-hour
        trigger: true
      - get: cf-networking-dev
        passed: [toque-push]
      - get: cf-networking-release-ci
        params:
          submodules: none
      - get: toque-scaling-test-params
        passed: [toque-push]
      - get: toque-stats
      - get: cf-networking-deployments
        passed: [toque-push]
    - task: get-credhub-vars
      file: cf-networking-release-ci/ci/tasks/get-credhub-vars.yml
      input_mapping:
        bbl-state: cf-networking-deployments
      params:
        BBL_STATE_DIR: environments/toque
        VARIABLES: |
          /bosh-toque/cf/cf_admin_password
    - task: set-scaling-test-params
      file: cf-networking-release-ci/ci/tasks/set-scaling-test-params.yml
      params:
        ENVIRONMENT_NAME: toque
      input_mapping:
        deployments-repo: cf-networking-deployments
        scaling-test-params: toque-scaling-test-params
    - task: emit-datadog-test-start
      file: cf-networking-release-ci/ci/tasks/emit-datadog-event.yml
      params:
        TITLE: test_start
        TEXT: test_start
        PRIORITY: normal
        AWS_ENV: toque.c2c.cf-app.com
        DATADOG_API_KEY: ((datadog_api_key))
    - task: test-scalability
      file: cf-networking-release-ci/ci/tasks/test-scalability.yml
      params:
        ENVIRONMENT_NAME: toque
      input_mapping:
        cf-networking: cf-networking-dev
        test-config: test-config
      ensure:
        task: emit-datadog-test-stop
        file: cf-networking-release-ci/ci/tasks/emit-datadog-event.yml
        params:
          TITLE: test_end
          TEXT: test_end
          PRIORITY: normal
          AWS_ENV: toque.c2c.cf-app.com
          DATADOG_API_KEY: ((datadog_api_key))

  - name: caubeen-bbl-up
    serial_groups: [caubeen]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-deployments
      - get: cf-networking-release-ci
      - get: bosh-bootloader
    - task: add-parent-dns
      file: cf-networking-release-ci/ci/tasks/add-parent-dns.yml
      params:
        ENVIRONMENT: caubeen
      input_mapping:
        bbl-state: cf-networking-deployments
    - task: bbl-up
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      params:
        BBL_GCP_SERVICE_ACCOUNT_KEY: environments/gcp/service-account.key.json
        BBL_GCP_REGION: us-east1
        BBL_STATE_DIR: environments/caubeen/
        BBL_IAAS: gcp
        BBL_LB_CERT: ((caubeen-lb-cert.certificate))
        BBL_LB_KEY: ((caubeen-lb-key.private_key))
        LB_DOMAIN: caubeen.c2c.cf-app.com
        BBL_ENV_NAME: caubeen
      input_mapping:
        bbl-state: updated-bbl-state
        bbl-config: updated-bbl-state
      ensure:
        put: cf-networking-deployments
        params:
          repository: updated-bbl-state
          rebase: true

  - name: caubeen-bbl-destroy
    serial_groups: [caubeen]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-deployments
    - task: bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      params:
        BBL_STATE_DIR: environments/caubeen/
      input_mapping:
        bbl-state: cf-networking-deployments
    - task: bbl-destroy
      file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
      params:
        BBL_GCP_SERVICE_ACCOUNT_KEY: environments/gcp/service-account.key.json
        BBL_STATE_DIR: environments/caubeen/
      input_mapping:
        bbl-state: cf-networking-deployments
      ensure:
        put: cf-networking-deployments
        params:
          repository: updated-bbl-state
          rebase: true

  - name: caubeen-deploy-pinned
    serial_groups: [caubeen]
    plan:
    - aggregate:
      - get: trigger-upgrade-deploy
        trigger: true
      - get: cf-networking-release-ci
        params:
          submodules: none
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-deployments
      - get: cf-deployment-pinned
      - get: cf-networking-2.16.0
      - get: silk-2.16.0
    - task: upload-pinned-stemcell
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      params:
        BBL_STATE_DIR: environments/caubeen/
      input_mapping:
        cf-deployment: cf-deployment-pinned
        bbl-state: cf-networking-deployments
    - task: collect-pinned-ops-files
      file: cf-networking-release-ci/ci/tasks/collect-ops-files.yml
      params:
        ENVIRONMENT_NAME: caubeen
      input_mapping:
        cf-deployment: cf-deployment-pinned
        cf-networking-release: cf-networking-2.16.0
        deployments-repo: cf-networking-deployments
        silk-release: silk-2.16.0
    - task: deploy-pinned-cf-deployment
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      params:
        BBL_STATE_DIR: environments/caubeen/
        SYSTEM_DOMAIN: caubeen.c2c.cf-app.com
        OPS_FILES: |
          use-compiled-releases.yml
          cf-networking.yml
          use-external-dbs.yml
          use-external-blobstore.yml
          use-gcs-blobstore-service-account.yml
          use-system-domain-as-metron-deployment-name.yml
          enable-routing-integrity.yml
          enable-iptables-logger.yml
          enable-service-discovery.yml
          add-apps-internal-search-domain.yml
          scale-up-4-api-instances.yml
          lower-canary-watch-time.yml
        VARS_FILES: |
          environments/caubeen/external-db-vars.yml
          environments/caubeen/gcs-vars.yml
      input_mapping:
        cf-deployment: cf-deployment-pinned
        bbl-state: cf-networking-deployments
        vars-files: cf-networking-deployments
        vars-store: cf-networking-deployments

  - name: caubeen-upgrade-test
    serial_groups: [caubeen]
    plan:
    - aggregate:
      - get: trigger-upgrade-deploy
        passed: [caubeen-deploy-pinned]
        trigger: true
      - get: cf-networking-release-ci
        params:
          submodules: none
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-deployments
      - get: cf-deployment
      - get: capi-ci-passed
      - get: cf-networking-dev
        passed: [unit-and-integration-tests]
      - get: silk-dev
        passed: [unit-and-integration-tests]
    - task: get-credhub-vars
      file: cf-networking-release-ci/ci/tasks/get-credhub-vars.yml
      input_mapping:
        bbl-state: cf-networking-deployments
      params:
        BBL_STATE_DIR: environments/caubeen
        VARIABLES: |
          /bosh-caubeen/cf/cf_admin_password
    - task: verify-api-ready
      file: cf-networking-release-ci/ci/tasks/verify-api-ready.yml
      params:
        SYSTEM_DOMAIN: caubeen.c2c.cf-app.com
        ENVIRONMENT_NAME: caubeen
    - task: upload-stemcell
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      params:
        BBL_STATE_DIR: environments/caubeen/
      input_mapping:
        bbl-state: cf-networking-deployments
    - task: collect-ops-files
      file: cf-networking-release-ci/ci/tasks/collect-ops-files.yml
      params:
        ENVIRONMENT_NAME: caubeen
      input_mapping:
        cf-networking-release: cf-networking-dev
        deployments-repo: cf-networking-deployments
        silk-release: silk-dev
    - task: upload-local-silk-release
      file: cf-networking-release-ci/ci/tasks/upload-local-release.yml
      input_mapping:
        bbl-state: cf-networking-deployments
        local-release: silk-dev
      params:
        BBL_STATE_DIR: environments/caubeen/
    - task: upload-local-capi-release
      file: cf-networking-release-ci/ci/tasks/upload-local-release.yml
      input_mapping:
        bbl-state: cf-networking-deployments
        local-release: capi-ci-passed
      params:
        BBL_STATE_DIR: environments/caubeen/
    - task: deploy-cf-dev
      file: cf-deployment-concourse-tasks/bosh-deploy-with-created-release/task.yml
      params:
        BBL_STATE_DIR: environments/caubeen/
        SYSTEM_DOMAIN: caubeen.c2c.cf-app.com
        OPS_FILES: |
          use-compiled-releases.yml
          cf-networking.yml
          use-external-dbs.yml
          use-external-blobstore.yml
          use-gcs-blobstore-service-account.yml
          use-system-domain-as-metron-deployment-name.yml
          enable-routing-integrity.yml
          enable-iptables-logger.yml
          enable-service-discovery.yml
          enable-backup-restore.yml
          add-apps-internal-search-domain.yml
          scale-up-4-api-instances.yml
          lower-canary-watch-time.yml
          use-latest-silk.yml
          use-latest-capi.yml
          enable-experimental-dynamic-egress-policies.yml
        VARS_FILES: |
          environments/caubeen/external-db-vars.yml
          environments/caubeen/gcs-vars.yml
        DEPLOY_WITH_UPTIME_MEASUREMENTS: true
        FAIL_ON_DOWNTIME: true
        APP_PUSHABILITY_THRESHOLD: 2 # our api vms take 6 min to recreate, so this number should be under 6
        MEASURE_SYSLOG_AVAILABILITY: false
        RECENT_LOGS_THRESHOLD: 5
      input_mapping:
        bbl-state: cf-networking-deployments
        release: cf-networking-dev
        vars-files: cf-networking-deployments
        vars-store: cf-networking-deployments

  - name: caubeen-drats
    serial_groups: [caubeen]
    plan:
    - aggregate:
      - get: cf-networking-release-ci
        params:
          submodules: none
      - get: cf-networking-dev
        passed: [caubeen-upgrade-test]
        trigger: true
      - get: silk-dev
        passed: [caubeen-upgrade-test]
        trigger: true
      - get: cf-deployment
        passed: [caubeen-upgrade-test]
        trigger: true
      - get: cf-networking-deployments
      - get: disaster-recovery-acceptance-tests
      - get: bbr-binary-release
    - task: get-credhub-vars
      file: cf-networking-release-ci/ci/tasks/get-credhub-vars.yml
      input_mapping:
        bbl-state: cf-networking-deployments
      params:
        BBL_STATE_DIR: environments/caubeen
        VARIABLES: |
          /bosh-caubeen/cf/cf_admin_password
    - task: create-drats-config
      file: cf-networking-release-ci/ci/tasks/create-drats-config.yml
      input_mapping:
        test-config: cf-networking-deployments
        vars-store: cf-networking-deployments
      params:
        ENVIRONMENT_NAME: caubeen
    - task: run-drats
      privileged: true
      file: disaster-recovery-acceptance-tests/ci/drats-with-integration-config/task.yml
##### Human-triggered utilities

  - name: delete-pickelhelm-deployment
    serial_groups: [pickelhelm]
    plan:
    - aggregate:
      - get: cf-networking-deployments
      - get: cf-deployment-concourse-tasks
    - task: delete-deployment
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      params:
        BBL_STATE_DIR: environments/pickelhelm/
        DEPLOYMENT_NAME: cf
      input_mapping:
        bbl-state: cf-networking-deployments

  - name: delete-deployment-mitre-cf
    serial_groups: [mitre-test-group, mitre-deploy-group]
    plan:
    - aggregate:
      - get: cf-networking-deployments
      - get: cf-deployment-concourse-tasks
    - task: delete-deployment
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      params:
        BBL_STATE_DIR: environments/mitre/
        DEPLOYMENT_NAME: cf
      input_mapping:
        bbl-state: cf-networking-deployments

  - name: delete-toque-deployment
    serial_groups: [toque]
    plan:
    - aggregate:
      - get: cf-networking-deployments
      - get: cf-deployment-concourse-tasks
    - task: delete-deployment
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      params:
        BBL_STATE_DIR: environments/toque/
        DEPLOYMENT_NAME: cf
      input_mapping:
        bbl-state: cf-networking-deployments

  - name: delete-caubeen-deployment
    serial_groups: [caubeen]
    plan:
    - aggregate:
      - get: cf-networking-release-ci
        params:
          submodules: none
      - get: cf-networking-deployments
      - get: cf-deployment-concourse-tasks
      - get: trigger-caubeen-delete
        trigger: true
    - task: delete-deployment
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      params:
        BBL_STATE_DIR: environments/caubeen/
        DEPLOYMENT_NAME: cf
      input_mapping:
        bbl-state: cf-networking-deployments
    - task: reinitialize-database
      file: cf-networking-release-ci/ci/tasks/reinitialize-database.yml
      params:
        BACKUP_ID: '1540250194513'
        DATABASE_NAME: caubeen-database
        ENVIRONMENT_NAME: caubeen
      input_mapping:
        deployments-repo: cf-networking-deployments

  - name: caubeen-cleanup
    serial_groups: [caubeen]
    plan:
    - aggregate:
      - get: cf-networking-deployments
      - get: cf-deployment-concourse-tasks
      - get: trigger-caubeen-cleanup
        trigger: true
    - task: cleanup-caubeen
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      params:
        CLEAN_ALL: false
        BBL_STATE_DIR: environments/caubeen/
      input_mapping:
        bbl-state: cf-networking-deployments


  - name: ship-what
    serial_groups: [version]
    plan:
    - do:
      - aggregate:
        - get: version
          passed: [mitre-cats]
        - get: cf-networking-dev
          params:
            submodules: none
          passed: [mitre-cats, caubeen-drats]
          trigger: true
        - get: silk-dev
          params:
            submodules: none
          passed: [mitre-cats, caubeen-drats]
          trigger: true
        - get: cf-deployment
          passed: [mitre-cats, caubeen-drats]
        - get: cf-networking-tarball
          passed: [mitre-cats]
          trigger: true
        - get: silk-tarball
          passed: [mitre-cats]
        - get: cf-networking-release-ci
          params:
            submodules: none
      - task: build-release-notes
        file: cf-networking-release-ci/ci/tasks/build-release-notes.yml
        input_mapping:
          master-release: cf-networking-dev
          other-release-version: version
        params:
          OTHER_RELEASE_NAME: silk-release
          PRE_RELEASE: "true"
      - task: silk-build-release-notes
        file: cf-networking-release-ci/ci/tasks/build-release-notes.yml
        input_mapping:
          master-release: silk-dev
          other-release-version: version
        params:
          OTHER_RELEASE_NAME: cf-networking-release
          PRE_RELEASE: "true"
      - put: cf-networking-release-candidate
        params:
          repository: cf-networking-dev
      - put: silk-release-candidate
        params:
          repository: silk-dev

  - name: check-empty-networking-opsfile
    serial_groups: [version]
    plan:
    - do:
      - aggregate:
        - get: cf-networking-release-ci
          params:
            submodules: none
        - get: version
          passed: [mitre-cats]
        - get: cf-networking-dev
          params:
            submodules: none
          passed: [mitre-cats]
          trigger: true
      - task: check-empty-networking-opsfile
        file: cf-networking-release-ci/ci/tasks/check-empty-networking-opsfile.yml
        input_mapping:
          cf-networking: cf-networking-dev

  - name: ship-cf-networking-and-silk
    plan:
    - do:
      - aggregate:
        - get: cf-networking-master
        - get: silk-master
        - get: cf-networking-deployments
        - get: cf-networking-release-ci
          params:
            submodules: none
        - get: version
          params:
            bump: final
          passed: [ship-what]
        - get: cf-networking-dev
          params:
            submodules: none
          passed: [ship-what]
        - get: silk-dev
          params:
            submodules: none
          passed: [ship-what]
        - get: cf-deployment
          passed: [ship-what]
        - get: cf-networking-tarball
          passed: [ship-what]
        - get: silk-tarball
          passed: [ship-what]
      - task: checkit
        file: cf-networking-release-ci/ci/tasks/checkit.yml
        input_mapping:
          dev-repo: cf-networking-dev
          master-repo: cf-networking-master
      - task: checkit-silk
        file: cf-networking-release-ci/ci/tasks/checkit.yml
        input_mapping:
          dev-repo: silk-dev
          master-repo: silk-master
      - task: shipit
        file: cf-networking-release-ci/ci/tasks/shipit.yml
        input_mapping:
          cf-networking: cf-networking-dev
      - put: version
        params: {file: version/number}
      - put: cf-networking-master
        params:
          repository: release/master
          tag: version/number
      - put: cf-networking-tarball
        params:
          file: final-release/cf-networking-*.tgz
      - task: build-release-notes
        file: cf-networking-release-ci/ci/tasks/build-release-notes.yml
        input_mapping:
          master-release: cf-networking-master
          other-release-version: version
        params:
          OTHER_RELEASE_NAME: silk-release
      - put: cf-networking-github-release
        params:
          name: version/number
          tag: version/number
          body: release-notes/notes.md
          globs:
          - final-release/cf-networking-*.tgz
      - task: silk-shipit
        file: cf-networking-release-ci/ci/tasks/silk-shipit.yml
        input_mapping:
          silk: silk-dev
      - put: silk-master
        params:
          repository: release/master
          tag: version/number
      - put: silk-tarball
        params:
          file: final-release/silk-*.tgz
      - task: silk-build-release-notes
        file: cf-networking-release-ci/ci/tasks/build-release-notes.yml
        input_mapping:
          master-release: silk-master
          other-release-version: version
        params:
          OTHER_RELEASE_NAME: cf-networking-release
      - put: silk-github-release
        params:
          name: version/number
          tag: version/number
          body: release-notes/notes.md
          globs:
          - final-release/silk-*.tgz

  # bump minor version (i.e. 0.1.0 -> 0.2.0)
  - name: bump-minor-version
    serial_groups: [version]
    plan:
    - aggregate:
      - get: version
        trigger: true
        passed: [ship-cf-networking-and-silk]
        params: {bump: minor, pre: rc}
    - put: version
      params: {file: version/number}

  # merge master back to develop
  - name: merge-master
    plan:
    - do:
      - aggregate:
        - get: cf-networking-release-ci
          params:
            submodules: none
        - get: cf-networking-master
          params:
            submodules: none
          passed: [ship-cf-networking-and-silk]
          trigger: true
        - get: cf-networking-dev
          resource: cf-networking-dev-full
          params: {submodules: none}
      - task: merge-master
        file: cf-networking-release-ci/ci/tasks/merge-master.yml
      - put: cf-networking-dev-full
        params: {repository: release-merged}

  # versioning
  - name: patch-bump
    serial_groups: [version]
    plan:
    - get: version
      params: {bump: patch}
    - put: version
      params: {file: version/number}

  - name: minor-bump
    serial_groups: [version]
    plan:
    - get: version
      params: {bump: minor}
    - put: version
      params: {file: version/number}

  - name: major-bump
    serial_groups: [version]
    plan:
    - get: version
      params: {bump: major}
    - put: version
      params: {file: version/number}

  # merge silk-master back to silk-develop
  - name: silk-merge-master
    plan:
    - do:
      - aggregate:
        - get: cf-networking-release-ci
          params:
            submodules: none
        - get: silk-master
          params:
            submodules: none
          passed: [ship-cf-networking-and-silk]
          trigger: true
        - get: silk-dev
          params: {submodules: none}
      - task: silk-merge-master
        file: cf-networking-release-ci/ci/tasks/silk-merge-master.yml
      - put: silk-dev
        params: {repository: release-merged}
